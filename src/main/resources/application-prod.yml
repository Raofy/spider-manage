
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      url:  jdbc:mysql://localhost:3306/spider-manage?useSSL=false&useUnicode=true&characterEncoding=utf-8
      username: root
      password: 123456@Jin10.com
      driver-class-name: com.mysql.jdbc.Driver
      initial-size: 10                                             # 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      max-active: 20                                               # 最大连接池数量
      max-wait: 60000                                             # 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      min-idle: 1                                                 # 最小连接池数量
      time-between-eviction-runs-millis: 600000                   # 有两个含义： 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
      min-evictable-idle-time-millis: 300000                      # 连接保持空闲而不被驱逐的最小时间
      test-while-idle: true                                       # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-on-borrow: true                                        # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false                                       # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      pool-prepared-statements: false                             # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      max-open-prepared-statements: 20                            # 打开PSCache，并且指定每个连接上PSCache的大小
      validation-query: SELECT 1                                  # 用来检测连接是否有效的sql，要求是一个查询语句，常用select ‘x’。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      validation-query-timeout: 500                               # 单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
      filters: stat                                               # 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall

      stat-view-servlet:                                          # 配置druid监控
        enabled: true
        url-pattern: /druid/*                                      # 访问地址规则
        reset-enable: true                                         # 是否允许清空统计数据
        login-username: admin                                      # 监控页面的登录账户
        login-password: admin                                      # 监控页面的登录密码

#  datasource:
#    url: jdbc:mysql://localhost:3306/spider-manage?useSSL=false&useUnicode=true&characterEncoding=utf-8
#    username: root
#    password: 123456@Jin10.com
#    driver-class-name: com.mysql.jdbc.Driver
  mvc:
    static-path-pattern: /uploads/images/**
  resources:
    static-locations: classpath:/static/uploads/images/


#mybatis-plus日志打印配置
mybatis-plus:
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      #logic-delete-field: flag  # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)



# xxl-job
xxl:
  job:
    admin:
      username: admin                                # 登录admin后台的用户名
      password: 123456                               # 登录admin后台的密码
      addresses: http://localhost:8096/xxl-job-admin # 调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"；为空则关闭自动注册；
    executor:
      appname: spider-executor # 执行器 AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册
      ip: # 执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 "执行器注册" 和 "调度中心请求并触发任务"；
      port: 6666 # ### 执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；
      logpath: /home/software/web/spider-manager/logs # 执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；
      logretentiondays: 30 # 执行器日志文件保存天数 [选填] ： 过期日志自动清理, 限制值大于等于3时生效; 否则, 如-1, 关闭自动清理功能；
    accessToken: jin10 # 执行器通讯TOKEN [选填]：非空时启用；

server:
  port: 18888
